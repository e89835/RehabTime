{"ast":null,"code":"// Log Function\n// Basic logger interface\n// Log levels\nconst NOOP = (message, ...optionalParams) => {}; // Logger which outputs to the browser console\n\n\n_c = NOOP;\nexport class ConsoleLogger {\n  constructor(options) {\n    this.log = void 0;\n    this.warn = void 0;\n    this.error = void 0;\n    const {\n      level\n    } = options || {};\n    this.error = console.error.bind(console);\n\n    if (level === 'error') {\n      this.log = NOOP;\n      this.warn = NOOP;\n      return;\n    }\n\n    this.warn = console.warn.bind(console);\n\n    if (level === 'warn') {\n      this.log = NOOP;\n      return;\n    }\n\n    this.log = console.log.bind(console);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"NOOP\");","map":{"version":3,"sources":["C:/Users/JuanJo/Desktop/MII/2122/CC/Proyecto/rehabtime/src/Logger.ts"],"names":["NOOP","message","optionalParams","ConsoleLogger","constructor","options","log","warn","error","level","console","bind"],"mappings":"AAAA;AAKE;AAOA;AAGA,MAAMA,IAAW,GAAE,CAACC,OAAD,EAAiB,GAAGC,cAApB,KAA6C,CAAE,CAAlE,C,CAEA;;;KAFMF,I;AAGN,OAAO,MAAMG,aAAN,CAAsC;AAK3CC,EAAAA,WAAW,CAACC,OAAD,EAAiC;AAAA,SAJnCC,GAImC;AAAA,SAHnCC,IAGmC;AAAA,SAFnCC,KAEmC;AACxC,UAAK;AAACC,MAAAA;AAAD,QAASJ,OAAO,IAAI,EAAzB;AAEA,SAAKG,KAAL,GAAaE,OAAO,CAACF,KAAR,CAAcG,IAAd,CAAmBD,OAAnB,CAAb;;AACA,QAAGD,KAAK,KAAK,OAAb,EAAqB;AAAE,WAAKH,GAAL,GAAUN,IAAV;AAAgB,WAAKO,IAAL,GAAWP,IAAX;AAAiB;AAAQ;;AAEhE,SAAKO,IAAL,GAAYG,OAAO,CAACH,IAAR,CAAaI,IAAb,CAAkBD,OAAlB,CAAZ;;AACA,QAAGD,KAAK,KAAK,MAAb,EAAoB;AAAE,WAAKH,GAAL,GAAUN,IAAV;AAAgB;AAAQ;;AAE9C,SAAKM,GAAL,GAAWI,OAAO,CAACJ,GAAR,CAAYK,IAAZ,CAAiBD,OAAjB,CAAX;AACL;;AAf4C","sourcesContent":["// Log Function\r\nexport interface LogFn {\r\n    (message ?: any, ...optionalParams: any[]): void;\r\n  }\r\n  \r\n  // Basic logger interface\r\n  export interface Logger {\r\n    log: LogFn;\r\n    warn: LogFn;\r\n    error: LogFn;\r\n  }\r\n  \r\n  // Log levels\r\n  export type logLevel= 'log'|'warn'|'error';\r\n\r\n  const NOOP: LogFn= (message ?: any, ...optionalParams: any[])=> {};\r\n\r\n  // Logger which outputs to the browser console\r\n  export class ConsoleLogger implements Logger {\r\n    readonly log: LogFn;\r\n    readonly warn: LogFn;\r\n    readonly error: LogFn;\r\n\r\n    constructor(options ?: {level ?: logLevel}) {\r\n        const{level}= options || {};\r\n\r\n        this.error = console.error.bind(console);\r\n        if(level === 'error'){ this.log= NOOP; this.warn= NOOP; return;}\r\n        \r\n        this.warn = console.warn.bind(console);\r\n        if(level === 'warn'){ this.log= NOOP; return;}\r\n\r\n        this.log = console.log.bind(console);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}